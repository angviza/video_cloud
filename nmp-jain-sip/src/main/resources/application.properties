# Spring boot application
spring.application.name=npm-sip
server.port=8120


#redis
spring.redis.host=@spring.redis.host@
spring.redis.port=@spring.redis.port@
spring.redis.password=@spring.redis.password@


#################redis线程池设置#################
# redis连接池的最大连接数
spring.redis.pool.max-active=10
# redis连接池的最大等待时间，-1表示无需等待
spring.redis.pool.max-wait=-1
# redis连接池的最大空闲时间
spring.redis.pool.max-idle=8
# redis连接池的最小空闲时间  
spring.redis.pool.min-idle=0
# redis的请求超时时间
spring.redis.timeout=15000


#============== kafka ===================
#以逗号分隔的主机：端口对列表，用于建立与Kafka群集的初始连接。
spring.kafka.bootstrap-servers=@spring.kafka.bootstrap-servers@

#spring.kafka.producer.bootstrap-servers=192.168.2.119:9092
#如果该值大于零时，表示启用重试失败的发送次数
spring.kafka.producer.retries=0

#每当多个记录被发送到同一分区时，生产者将尝试将记录一起批量处理为更少的请求， 
#这有助于提升客户端和服务器上的性能，此配置控制默认批量大小（以字节为单位），默认值为16384
spring.kafka.producer.batch-size=16384

#生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432
spring.kafka.producer.buffer-memory=33554432

#生产者key的序列化，实现类实现了接口org.apache.kafka.common.serialization.Serializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

#生产者value的序列化，实现类实现了接口org.apache.kafka.common.serialization.Serializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#轮询消费者时使用的超时（以毫秒为单位）
spring.kafka.listener.poll-timeout=5000


#在侦听器容器中运行的线程数
spring.kafka.listener.concurrency=8