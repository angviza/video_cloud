<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>
		代码生成器配置文件: 
		1.会为所有的property生成property_dir属性,如pkg=com.company => pkg_dir=com/company
		2.可以引用环境变量: ${env.JAVA_HOME} or System.properties: ${user.home},property之间也可以相互引用
	</comment>
	<entry key="encoding">UTF-8</entry>
	<entry key="outRoot">code</entry>

	<!-- 大项目名称；（例如：大数据项目 bigdata） -->
	<entry key="pProject">bigdata</entry>
	<!-- 子工程名称；（例如：人脸工程 car） -->
	<entry key="cProject">car</entry>
	<!-- 项目工程名称；（项目-工程，例如：bigdata-car） -->
	<entry key="projectName">${pProject}-${cProject}</entry>
	<!-- 模块名称 -->
	<entry key="moduleName">eyesight</entry>
	<!-- 代码作者 -->
	<entry key="creator">guoweijun</entry>

	<entry key="basePackage">com.hdvon.nmp</entry>
	<entry key="enityPackage">${basePackage}.entity</entry>
	<entry key="voPackage">${basePackage}.vo</entry>
    <entry key="baseVoPackage">${basePackage}.vo.base</entry>
	<entry key="examplePackage">${enityPackage}.example</entry>
	<entry key="mapperPackage">${basePackage}.mapper</entry>
    <entry key="baseMapperPackage">${basePackage}.mapper.base</entry>
	<entry key="xmlPackage">${basePackage}.xml</entry>
    <entry key="baseXmlPackage">${basePackage}.xml.base</entry>
	<entry key="servicePackage">${basePackage}.service</entry>
	<entry key="serviceImplPackage">${servicePackage}.impl</entry>
	<entry key="controllerPackage">${basePackage}.controller</entry>



	<!-- ================================  3个子工程配置 begin  ================================ -->

	<!-- ########### api工程(生成vo、IService类) begin ########################### -->
	<!-- 模块名前缀；例如：com.hdvon.bigdata.car.center.system -->
	<entry key="apiModulePrefixName">hdvon.${pProject}.${cProject}.center.${moduleName}</entry>
	<!-- 代码基础包名 -->
	<entry key="apiBasepackage">com.hdvon.${pProject}.${cProject}.center.${moduleName}</entry>
	<!-- ########### api工程 end ########################### -->

	<!-- ########### center工程(生成ServiceImpl类、Example类) begin ########################### -->
	<!-- 模块名前缀；例如：com.hdvon.bigdata.car.center.system -->
	<entry key="centerModulePrefixName">hdvon.${pProject}.${cProject}.center.${moduleName}</entry>
	<!-- 代码基础包名 -->
	<entry key="centerBasepackage">com.hdvon.${pProject}.${cProject}.center.${moduleName}</entry>
	<!-- ########### center工程 end ########################### -->

	<!-- ########### web工程(生成Controller类) begin ########################### -->
	<!-- 模块名前缀；例如：com.hdvon.bigdata.car.center.system -->
	<entry key="webModulePrefixName">hdvon.${pProject}.${cProject}.${moduleName}</entry>
	<!-- 代码基础包名 -->
	<entry key="webBasepackage">com.hdvon.${pProject}.${cProject}.${moduleName}</entry>
	<!-- consumer的访问基础url -->
	<entry key="webBaseurl">/admin/permissions</entry>
	<!-- web freemarker模版的目录名称 -->
	<entry key="webpgk">permissions</entry>
	<!-- ########### web工程 end ########################### -->

	<!-- ================================  3个子工程配置 end     ================================ -->

	<!-- 需要移除的表名前缀,使用逗号进行分隔多个前缀,示例值: t_,v_ -->
	<entry key="tableRemovePrefixes">t_</entry>
	
	<entry key="jdbc_username">root</entry>
	<entry key="jdbc_password">rootroot</entry>
		
	<!-- oracle需要指定jdbc.schema,并且可能要大写，其它数据库忽略此项配置  -->
	<!-- <entry key="jdbc_schema">TAKY_APP</entry> -->
	<entry key="jdbc_catalog"></entry>
	
	<!-- 数据库类型至java类型映射  -->
	<entry key="java_typemapping.java.sql.Timestamp">java.util.Date</entry>
	<entry key="java_typemapping.java.sql.Date">java.util.Date</entry>
	<entry key="java_typemapping.java.sql.Time">java.util.Date</entry>	
	<entry key="java_typemapping.java.lang.Byte">Integer</entry>
	<entry key="java_typemapping.java.lang.Short">Integer</entry>
 	<entry key="java_typemapping.java.lang.Double">Double</entry>
	<entry key="java_typemapping.java.lang.Number">Double</entry> 
	<entry key="java_typemapping.java.math.BigDecimal">java.math.BigDecimal</entry>
	<entry key="java_typemapping.java.sql.Clob">String</entry>
	
	<!-- Mysql -->
	<entry key="jdbc_url">jdbc:mysql://192.168.2.216:3306/nmp?useUnicode=true&amp;characterEncoding=utf-8&amp;useInformationSchema=true</entry>
	<entry key="jdbc_driver">com.mysql.jdbc.Driver</entry>
	
	<!-- Oracle		jdbc:oracle:oci:@tnsname_devdb-->
	<!-- <entry key="jdbc_url">jdbc:oracle:thin:@localhost:1521:orcl</entry>
	<entry key="jdbc_driver">oracle.jdbc.driver.OracleDriver</entry> -->
	
	
	<!-- SQLServer2000 
	<entry key="jdbc_url">jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=[database]</entry>
	<entry key="jdbc_driver">com.microsoft.jdbc.sqlserver.SQLServerDriver</entry>
	-->
	
	<!-- SQLServer2005 
	<entry key="jdbc_url">jdbc:sqlserver://192.168.0.98:1433;DatabaseName=[database]</entry>
	<entry key="jdbc_driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</entry>
	-->

	<!-- JTDs for SQLServer 
	<entry key="jdbc_url">jdbc:jtds:sqlserver://192.168.0.102:1433/[database];tds=8.0;lastupdatecount=true</entry>
	<entry key="jdbc_driver">net.sourceforge.jtds.jdbc.Driver</entry>
	-->

	<!-- PostgreSql
	<entry key="jdbc_url">jdbc:postgresql://localhost/[database]</entry>
	<entry key="jdbc_driver">org.postgresql.Driver</entry>
	 -->
	
	<!-- Sybase
	<entry key="jdbc_url">jdbc:sybase:Tds:localhost:5007/[database]</entry>
	<entry key="jdbc_driver">com.sybase.jdbc.SybDriver</entry>
	 -->
	
	<!-- DB2 
	<entry key="jdbc_url">jdbc:db2://localhost:5000/[database]</entry>
	<entry key="jdbc_driver">com.ibm.db2.jdbc.app.DB2Driver</entry>
	-->
	
	<!-- HsqlDB 
	<entry key="jdbc_url">jdbc:hsqldb:mem:generatorDB</entry>
	<entry key="jdbc_driver">org.hsqldb.jdbcDriver</entry>
	-->
	
	<!-- Derby 
	<entry key="jdbc_url">jdbc:derby://localhost/databaseName</entry>
	<entry key="jdbc_driver">org.apache.derby.jdbc.ClientDriver</entry>	
	-->

	<!-- H2 
	<entry key="jdbc_url">jdbc:h2:tcp://localhost/~/test</entry>
	<entry key="jdbc_driver">org.h2.Driver</entry>
	-->

</properties>