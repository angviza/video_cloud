<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hdvon.nmp.mapper.WallPlanMapper">
  <resultMap id="BaseResultMap" type="com.hdvon.nmp.vo.WallPlanVo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="matrix_id" jdbcType="VARCHAR"  property="matrixId" />
    <result column="name" jdbcType="VARCHAR"  property="name" />
    <result column="status" jdbcType="INTEGER"  property="status" />
    <result column="share_status" jdbcType="INTEGER"  property="shareStatus" />
    <result column="bgn_time" jdbcType="TIMESTAMP"  property="bgnTime" />
    <result column="end_time" jdbcType="TIMESTAMP"  property="endTime" />
    <result column="description" jdbcType="VARCHAR"  property="description" />
    <result column="matrix_name" jdbcType="VARCHAR"  property="matrixName" />
    <result column="create_time" jdbcType="TIMESTAMP"  property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP"  property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR"  property="createUser" />
    <result column="update_user" jdbcType="VARCHAR"  property="updateUser" />
    <result column="dept_id" jdbcType="VARCHAR"  property="deptId" />
  </resultMap>

  <sql id="Customer_Column_List">
    t.id,t.matrix_id,t.name,t.status,t.share_status,t.bgn_time,t.end_time,t.description,t.create_user,t.update_user,t.create_time,t.update_time
  </sql>
  <sql id="Customer_Relate_List">
    t.id,t.matrix_id,t.name,t.status,t.share_status,t.bgn_time,t.end_time,t.description,t.create_user,t.update_user,t.create_time,t.update_time,m.name as matrix_name
  </sql>
  <!-- 查询上墙预案列表 -->
  <select id="selectWallPlanList" parameterType="map" resultMap="BaseResultMap">
  	<!-- select
  		<include refid="Customer_Relate_List"/>,d.id as deptId
  	from
  		t_wall_plan t, t_matrix m, t_user u, t_department d, t_user_department ud
  	where t.matrix_id = m.id
  		and u.id = ud.user_id
  		and d.id = ud.dep_id
  		<if test="id != null and id != ''">
  			and t.id = #{id}
  		</if>
  		<if test="name != null and name != ''">
  			and t.name like concat('%',#{name},'%')
  		</if>
  		<if test="status != null">
  			and t.status = #{status}
  		</if> -->
  		<!-- <choose>
	        <when test="shareStatus == 0">
	           and u.account = t.create_user
	        </when>
	        <when test="shareStatus == 2">
	           and 
	        </when>
	    </choose> -->
	    select
  		<include refid="Customer_Relate_List"/>
  	from
  		t_wall_plan t, t_matrix m
  	where t.matrix_id = m.id
	  	<if test="id != null and id != ''">
	  			and t.id = #{id}
	  		</if>
	  		<if test="name != null and name != ''">
	  			and t.name like concat('%',#{name},'%')
	  		</if>
	  		<if test="status != null">
	  			and t.status = #{status}
	  		</if>
	  		<if test="matrixId != null and matrixId != ''">
	  			and t.matrix_id = #{matrixId}
	  		</if>
	  		<if test="isValid != null">
	  			and sysdate() between t.bgn_time and t.end_time
	  		</if>
  			<if test="isAdmin == false">
  				and ((t.share_status = 0 and t.create_user = #{account})
	  			or t.share_status = 1
	  			or (t.share_status = 2 and exists(select u.* from t_user u, t_department d, t_user_department ud, t_plan_share ps where 
	  				t.create_user = #{account} and t.create_user = u.account and u.id = ud.user_id and d.id = ud.dep_id and d.id =ps.department_id AND t.id = ps.plan_id))
	  			or (t.share_status = 3 and exists(select u.* from t_user u, t_department d, t_user_department ud, t_plan_share ps where 
	  				t.create_user = #{account} and t.create_user = u.account and u.id = ud.user_id and d.id = ud.dep_id and d.id = ps.department_id AND t.id = ps.plan_id)))
  			</if>
  			order by t.create_time desc
  </select>
  <!-- 根据预置位id集合查询关联的上墙预案 -->
  <select id="selectWallPlanByPresents" parameterType="java.util.List" resultMap="BaseResultMap">
  		select wp.* from t_wall_plan wp, t_present_position pp, t_plan_present tpp where wp.id = tpp.plan_id and tpp.present_id = pp.id 
            and pp.id in
            <foreach collection="presentIds" item="item" open="(" close=")"  separator="," >
              #{item}
          </foreach>
  </select>
</mapper>